events {}

http {

    # Inclui os tipos de arquivos, caso essa configuração não seja definida tudo será considerado text/plain
    # O mime.types contém o detalhamento dos tipos de arquivos.
    include mime.types;

    # O contexto server é responsavel por definir um virtual host
    server {

        # Define a porta do virtual host
        listen 80;
        # Define o ip do servidor
        server_name 127.0.0.1;

        # Em caso de arquivos estaticos define o caminho base no servidor
        # (Esse caminho está sendo alimentado por um volume do docker)
        root /sites/demo;


        # As variaveis padrão do nginx podem ser encontradas em: http://nginx.org/en/docs/varindex.html

        # ------------- Exemplo 01 ------------

        # Checa chave de API (Não recomendado o uso... apenas pela ciência hehe)
        if ( $arg_apikey != 1234 ) {
            return 401 "Incorrect API Key";
        }

        # ------------- Exemplo 02 ------------

        # Declarando uma variavel... Os valores podem ser: strings, integers ou booleans
        set $weekend 'No';

        # Verifica uma expressão regular na data atual do sistema ($date_local é uma variavel padrão do nginx)
        if ( $date_local ~ 'Saturday|Sunday' ) {
            set $weekend 'Yes';
        }

        location = /is-weekend {
            return 200 $weekend;
        }

        # ------------- Exemplo 03 ------------

        # Assim como no PHP as variaveis podem ser identificadas pelo prefixo '$'
        location = /inspect {
            # $host = ip ou dominio
            # $uri  = uri da requisição
            # $args = argumentos passados via query string 
            return 200 "$host \n$uri \n$args";
        }


        location = /inspect-with-name {
            # É possivel capturar um argumento passado via query string da seguinte forma:
            return 200 "Name: $arg_name";
            # O parametro no caso teria o nome 'name'
        }

    }

}