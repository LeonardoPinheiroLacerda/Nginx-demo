events {}

http {

    # Inclui os tipos de arquivos, caso essa configuração não seja definida tudo será considerado text/plain
    # O mime.types contém o detalhamento dos tipos de arquivos.
    include mime.types;

    # O contexto server é responsavel por definir um virtual host
    server {

        # Define a porta do virtual host
        listen 80;
        # Define o ip do servidor
        server_name 127.0.0.1;

        # Em caso de arquivos estaticos define o caminho base no servidor
        # (Esse caminho está sendo alimentado por um volume do docker)
        root /sites/demo;


        # ------------ Exemplo 01 ------------

        location /logo {
            # O status code 307 é responsável por redirect então quando o return
            # recebe o status code 307 o comportamento muda... dessa forma ele recebe
            # como segundo argumento um caminho para ser redirecionado...
            # No caso estamos utilizando o docker, mapeando a porta 80 do container
            # para a porta 8000 do computador, então quando o navegador tentar redirecionar 
            # localhost/thumb.png não irá encontrar nada pois o correto seria localhost:8000/thumb.png
            return 307 /thumb.png;
        }
       
        # ------------ Exemplo 02 ------------

        # Sobrescreve alguma rota, sendo o primeiro argumento a nova rota, e o segundo a rota
        # que será sobrescrita (/greet ainda será acessivel)
        # /user/\w+ = /user/(palavra com mais de um caractere)
        # Exemplo: /user/json
        rewrite /user/\w+ /greet/;

        location /greet {
            return 200 "Hello User";
        }

        # ------------ Exemplo 03 ------------

        # /person/(\w+) = /person/(palavra com mais de um caractere)
        # Exemplo: /person/leonardo
        # Cercando a expressão regular com parenteses, é possivel capturar o valor 
        # da seguinte forma:
        rewrite /person/(\w+) /greet-person/$1;

        location /greet-person {
            return 200 "Hello $1";
        }

        # ------------ Exemplo 04 ------------

        # Com o rewrite é possivel resolver o bug mencionado no exemplo 01
        rewrite /logo /thumb.png;        

        # Existe também um terceiro argumento no rewrite chamado 'last', quando ativo, informa
        # que o rewrite em questão não pode ser mais sobrescrito


        # Basicamento a diferença entre 'return 307' e rewrite é que o rewrite 
        # mantém redirecionamento oculto, enquanto o return 307 deixa exposto ao cliente

    }

}