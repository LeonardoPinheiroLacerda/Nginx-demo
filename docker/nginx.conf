# Usuário responsavel pelos workers
# user root;

# Quantidade de workers (default 1) o indicado é termos o mesmo número de workers que temos de cores no processador
# se passarmos auto ele já vai instanciar um worker por core, mas para sabermos quantos cores tem o nosso servidor podemos
# utilizar o comando 'nproc'
worker_processes auto;

events {
    # Quantidade de conexões que cada worker pode ter simultaneamente.
    # Para encontrarmos a quantidade de arquivos que o processador pode abrir simultaneamente
    # utiliza o comando 'ulimit -n'.
    # Esse será o valor ideal para essa diretriz.
    worker_connections 1024;
}

http {

    # O gzip é um modulo que envia a resposta dos requests em formado zip, onde o cliente será responsavel
    # por descompactar o mesmo para uso, assim diminuindo o tamanho dos arquivos enviados

    # Habilita o gzip nas respostas (pode ser sobrescito)
    gzip on;

    # Nivel de compressão (0 - 9)
    gzip_comp_level 3;

    # Para quais formatos os recursos serão comprimidos antes de serem enviados
    gzip_types text/css;
    gzip_types text/javascript;

    # Inclui os tipos de arquivos, caso essa configuração não seja definida tudo será considerado text/plain
    # O mime.types contém o detalhamento dos tipos de arquivos.
    include mime.types;

    # O contexto server é responsavel por definir um virtual host
    server {

        # Define a porta do virtual host
        listen 80;
        # Define o ip do servidor
        server_name 127.0.0.1;

        # Em caso de arquivos estaticos define o caminho base no servidor
        # (Esse caminho está sendo alimentado por um volume do docker)
        root /sites/demo;

        # Para tal é importante enviar o header 'Vary' dessa forma para que o cliente saiba que o arquivo se trata
        # de um arquivo compactado.

        location ~* \.(css|js|jpg|png|jpeg)$ {
            access_log off;

            add_header Cache_Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1M;
        }


    }

}