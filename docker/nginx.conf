# Usuário responsavel pelos workers
user root;

# Quantidade de workers (default 1) o indicado é termos o mesmo número de workers que temos de cores no processador
# se passarmos auto ele já vai instanciar um worker por core, mas para sabermos quantos cores tem o nosso servidor podemos
# utilizar o comando 'nproc'
worker_processes auto;

events {
    # Quantidade de conexões que cada worker pode ter simultaneamente.
    # Para encontrarmos a quantidade de arquivos que o processador pode abrir simultaneamente
    # utiliza o comando 'ulimit -n'.
    # Esse será o valor ideal para essa diretriz.
    worker_connections 1024;
}

http {

    # Inclui os tipos de arquivos, caso essa configuração não seja definida tudo será considerado text/plain
    # O mime.types contém o detalhamento dos tipos de arquivos.
    include mime.types;

    # Unidades de medida de tempo
    # 1 - millisecond
    # 1s - second
    # 1m - minute
    # 1h - hour
    # 1d - day

    # Unidades de tempo para armazenamento
    # 1 - byte
    # 1K - kb
    # 1m - mb

    # Tamanho do buffer para post request
    # Tamanho do buffer que será criado na memoria dos bodies recebidos
    client_body_buffer_size 10K;
    # Tamanho maximo do body aceito nos request (caso seja excedido retorno o código 413)
    client_max_body_size 8m;

    # Tamanho do buffer para o header dos requests
    client_header_buffer_size 1k;

    # Timeout para recebimento dos header/body dos requests
    client_body_timeout 12;
    client_header_timeout 12;

    # Tempo maximo para manter uma conexão aberta
    keepalive_timeout 15;

    # Tempo maximo para o cliente aceitar ou receber uma resposta
    send_timeout 10;

    # Pula buffer para arquivos estaticos
    sendfile on;

    # Otimiza os pacotes do sendfile
    tcp_nopush on;

    # O contexto server é responsavel por definir um virtual host
    server {

        # Define a porta do virtual host
        listen 80;
        # Define o ip do servidor
        server_name 127.0.0.1;

        # Em caso de arquivos estaticos define o caminho base no servidor
        # (Esse caminho está sendo alimentado por um volume do docker)
        root /sites/demo;

    }

}